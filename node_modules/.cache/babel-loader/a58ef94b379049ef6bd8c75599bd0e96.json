{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.filchuk\\\\Desktop\\\\mistakes-of-the-month\\\\src\\\\components\\\\home\\\\DatePickers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport moment from \"moment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200\n  }\n});\n\nfunction DatePickers(props) {\n  _s();\n\n  const {\n    classes\n  } = props;\n  const calendarInputRef = useRef(null);\n  const [date, setDate] = useState(moment(Date.now()).format(\"YYYY-MM-DD\"));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        onChange: e => setDate(e.target.value),\n        inputRef: calendarInputRef,\n        id: \"date\",\n        label: props.label || \"Select a Date:\",\n        type: \"date\",\n        value: date,\n        className: classes.textField,\n        InputLabelProps: {\n          shrink: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"activate calendar\",\n        onClick: () => calendarInputRef.current.focus(),\n        children: /*#__PURE__*/_jsxDEV(SvgIcon, {\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M20 3h-1V1h-2v2H7V1H5v2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 18H4V8h16v13z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Date chosen: \", date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DatePickers, \"uJFxQ+wnM4EMErfVf9QevRlAeVY=\");\n\n_c = DatePickers;\nDatePickers.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(DatePickers);\n\nvar _c;\n\n$RefreshReg$(_c, \"DatePickers\");","map":{"version":3,"sources":["C:/Users/a.filchuk/Desktop/mistakes-of-the-month/src/components/home/DatePickers.js"],"names":["React","useRef","useState","PropTypes","withStyles","TextField","moment","IconButton","SvgIcon","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","width","DatePickers","props","classes","calendarInputRef","date","setDate","Date","now","format","e","target","value","label","shrink","current","focus","propTypes","object","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;;;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,QAAQ,EAAE;AAFD,GADY;AAKvBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAEL,KAAK,CAACM,OAAN,CAAcC,IADjB;AAETC,IAAAA,WAAW,EAAER,KAAK,CAACM,OAAN,CAAcC,IAFlB;AAGTE,IAAAA,KAAK,EAAE;AAHE;AALY,CAAL,CAApB;;AAYA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,QAAME,gBAAgB,GAAGtB,MAAM,CAAC,IAAD,CAA/B;AACA,QAAM,CAACuB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAACI,MAAM,CAACoB,IAAI,CAACC,GAAL,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,YAA1B,CAAD,CAAhC;AACA,sBACE;AAAA,4BACE;AAAM,MAAA,SAAS,EAAEN,OAAO,CAACX,SAAzB;AAAoC,MAAA,UAAU,MAA9C;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,QAAQ,EAAEkB,CAAC,IAAIJ,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CADxB;AAEE,QAAA,QAAQ,EAAER,gBAFZ;AAGE,QAAA,EAAE,EAAC,MAHL;AAIE,QAAA,KAAK,EAAEF,KAAK,CAACW,KAAN,IAAe,gBAJxB;AAKE,QAAA,IAAI,EAAC,MALP;AAME,QAAA,KAAK,EAAER,IANT;AAOE,QAAA,SAAS,EAAEF,OAAO,CAACR,SAPrB;AAQE,QAAA,eAAe,EAAE;AACfmB,UAAAA,MAAM,EAAE;AADO;AARnB;AAAA;AAAA;AAAA;AAAA,cADF,eAaE,QAAC,UAAD;AACE,sBAAW,mBADb;AAEE,QAAA,OAAO,EAAE,MAAMV,gBAAgB,CAACW,OAAjB,CAAyBC,KAAzB,EAFjB;AAAA,+BAIE,QAAC,OAAD;AAAA,iCACE;AAAM,YAAA,CAAC,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAuBE;AAAA,kCAAiBX,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA,kBADF;AA2BD;;GA/BQJ,W;;KAAAA,W;AAiCTA,WAAW,CAACgB,SAAZ,GAAwB;AACtBd,EAAAA,OAAO,EAAEnB,SAAS,CAACkC,MAAV,CAAiBC;AADJ,CAAxB;AAIA,eAAelC,UAAU,CAACK,MAAD,CAAV,CAAmBW,WAAnB,CAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport moment from \"moment\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: 200\r\n  }\r\n});\r\n\r\nfunction DatePickers(props) {\r\n  const { classes } = props;\r\n  const calendarInputRef = useRef(null);\r\n  const [date, setDate] = useState(moment(Date.now()).format(\"YYYY-MM-DD\"));\r\n  return (\r\n    <>\r\n      <form className={classes.container} noValidate>\r\n        <TextField\r\n          onChange={e => setDate(e.target.value)}\r\n          inputRef={calendarInputRef}\r\n          id=\"date\"\r\n          label={props.label || \"Select a Date:\"}\r\n          type=\"date\"\r\n          value={date}\r\n          className={classes.textField}\r\n          InputLabelProps={{\r\n            shrink: true\r\n          }}\r\n        />\r\n        <IconButton\r\n          aria-label=\"activate calendar\"\r\n          onClick={() => calendarInputRef.current.focus()}\r\n        >\r\n          <SvgIcon>\r\n            <path d=\"M20 3h-1V1h-2v2H7V1H5v2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 18H4V8h16v13z\" />\r\n          </SvgIcon>\r\n        </IconButton>\r\n      </form>\r\n      <p>Date chosen: {date}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nDatePickers.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(DatePickers);\r\n"]},"metadata":{},"sourceType":"module"}